// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  customer_id    Int @id @default(autoincrement())
  customer_email String @unique
  password       String
  age            Int
  address        String 
  phone_number   BigInt @db.BigInt
  customer_name String @unique
  searchhistory         history[]
  review                review[]
  request request[]
  
}

model Serviceprovider {
  serviceprovider_id              Int @id @default(autoincrement())
  serviceprovider_email           String     @unique             
  password                        String                  
  age                             Int
  address                         String                 
  phone_number                   BigInt
  gstregistration_number          String                  
  chargers_for_particular_service Int
  specialisation                  String
 serviceprovider_name String
 service_name String
  searchhistory                   history[]
  service                         service[]
  
 
  request request[]
}

model service {
  service_name           String
  service_id             Int @id @default(autoincrement())            
  service                Serviceprovider          @relation(fields: [serviceprovider_id], references: [serviceprovider_id])
  serviceprovider_id     Int             
  history  history []
  review                 review[]
  request request[]
  
 
}



model history {
  date               DateTime
  customer     Customer        @relation(fields: [customer_id], references: [customer_id])
  customer_id       Int         @unique 
  search             Serviceprovider @relation(fields: [serviceprovider_id], references: [serviceprovider_id])
  serviceprovider_id Int          
  searching          service         @relation(fields: [service_id], references: [service_id])
  service_id     Int         @unique
}


model review {
  customer       Customer @relation(fields: [customer_id], references: [customer_id])
  customer_id   Int @unique
  review_id        Int @id @default(autoincrement())
  service        service  @relation(fields: [service_id], references: [service_id])
  service_id    Int   @unique 
  rating         Float
  review_content String
}

 

model request{
  
  booking_id       Int @id @default(autoincrement())
  reasons_for_rejecting String
  date DateTime
  timeÂ DateTime
serviceprovider           Serviceprovider @relation(fields: [serviceprovider_id], references: [serviceprovider_id])
  serviceprovider_id Int        @unique 
customer       Customer @relation(fields: [customer_id], references: [customer_id])
  customer_id   Int  @unique 
  service         service         @relation(fields: [service_id], references: [service_id])
  service_id       Int         @unique 
}



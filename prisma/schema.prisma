// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")


}
model Customer{
  customer_id String  @id @default(uuid()) @db.Uuid
  customer_email String @unique  @db.VarChar(40)
  password String  @db.VarChar(15)
  age Int
  address String  @db.VarChar(40)
  phone_number Int
 
customerupdateprofile Customerupdateprofile[]
searchhistory searchhistory[]
searchservice searchservice[]
review review[]
}



model Serviceprovider{
 serviceprovider_id String  @id @default(uuid()) @db.Uuid
  serviceprovider_email String @unique  @db.VarChar(40)
  password String  @db.VarChar(15)
  age Int
  address String  @db.VarChar(40)
  phone_number Int
  gstregistration_number String @unique  @db.VarChar(40)
  chargers_for_particular_service Int
  specialisation String
  service_id String @unique
  searchhistory searchhistory[]
  service service[]
   bookingserviceprovider  bookingserviceprovider[]
  }
  model service{
  service_name String
  service_id String @id@default(uuid()) @db.Uuid
  service Serviceprovider @relation(fields: [serviceprovider_id], references: [serviceprovider_id])
 serviceprovider_id String @db.Uuid @unique
searchhistory searchhistory[]
bookingserviceprovider bookingserviceprovider[]
 review  review[]
 searchservice searchservice[]
}



model Customerupdateprofile{
  name String @db.VarChar(30)
  email_id String @unique  @db.VarChar(40)
  phone_number Int
  customerupdateprofile Customer @relation(fields: [customer_id], references: [customer_id])
  customer_id String @db.Uuid @unique
  age Int
  address String  @db.VarChar(40)
  
  
}
model searchhistory{
  date DateTime
   searchhistory Customer @relation(fields: [customer_id], references: [customer_id])
  customer_id String @db.Uuid @unique
search Serviceprovider @relation(fields: [serviceprovider_id], references: [serviceprovider_id])
 serviceprovider_id String @db.Uuid @unique
searching service @relation(fields: [service_id], references: [service_id])
 service_id String @db.Uuid @unique
service_name String
}
model bookingserviceprovider{
  book Serviceprovider @relation(fields: [serviceprovider_id], references: [serviceprovider_id])
 serviceprovider_id String @db.Uuid @unique
 booking_id String
 booking service @relation(fields: [service_id], references: [service_id])
 service_id String @db.Uuid @unique
 date DateTime
 
}
model review{
  reviews Customer @relation(fields: [customer_id], references: [customer_id])
  customer_id String @db.Uuid @unique
  review_id String @id @default(uuid()) @db.Uuid
  review service @relation(fields: [service_id], references: [service_id])
 service_id String @db.Uuid @unique
 rating Float
 review_content String
}
model searchservice{
  searchservice Customer @relation(fields: [customer_id], references: [customer_id])
  customer_id String @db.Uuid @unique
  service_name String
 searchservices service @relation(fields: [service_id], references: [service_id])
 service_id String @db.Uuid @unique
}